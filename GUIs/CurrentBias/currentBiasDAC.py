import sysimport labradimport fpgatools2 as fpimport setbias as sbfrom labrad.units import Vfrom PyQt4 import QtCore,QtGui,uicwith labrad.connect() as cxn:            class TestWindow (QtGui.QMainWindow):        def __init__(self):            QtGui.QMainWindow.__init__(self)            ui_class, widget_class = uic.loadUiType("currentBiasDAC.ui")            self.ui = ui_class()            self.ui.setupUi(self)            self.show()            self.board = 'Null'        @QtCore.pyqtSlot(str)        def on_boardSelect_currentIndexChanged(self, string):            if string == 'Null':                print 'No board connected'            elif string == 'ADR lab FPGA 5':                self.board = string                try:                    seq.select_device('ADR lab FPGA 5')                except Exception as e:                    print 'sequencer error'                    self.board = 'Null'                    self.ui.boardSelect.setCurrentIndex(0)                    raise e                zeroChan = fp.constMem(0.0, fluxDAC=0)                seq.packet().memory(zeroChan).run_sequence(30).send()                oneChan = fp.constMem(0.0, fluxDAC=1)                seq.packet().memory(oneChan).run_sequence(30).send()            else:                self.board = str(string)                try:                    sb.set_fb(self.board, cxn, 0*V, 0)                    sb.set_fb(self.board, cxn, 0*V, 1)                except Exception as e:                    print 'DAC board error'                    self.board = 'Null'                    self.ui.boardSelect.setCurrentIndex(0)                    raise e        @QtCore.pyqtSlot()        def on_zeroSlider_sliderReleased(self):            setValue1 = float(self.ui.zeroSlider.sliderPosition())/1000.0            if self.board == 'ADR lab FPGA 5':                zeroChan = fp.constMem(setValue1, fluxDAC=0)                seq.packet().memory(zeroChan).run_sequence(30).send()            elif self.board == 'Null':                print 'no board selected'            else:                sb.set_fb(self.board, cxn, setValue1*V, 0)        @QtCore.pyqtSlot()        def on_oneSlider_sliderReleased(self):            setValue2 = float(self.ui.oneSlider.sliderPosition())/1000.0            if self.board == 'ADR lab FPGA 5':                oneChan = fp.constMem(setValue2, fluxDAC=1)                seq.packet().memory(oneChan).run_sequence(30).send()            elif self.board == 'Null':                print 'no board selected'            else:                sb.set_fb(self.board, cxn, setValue2*V, 1)        @QtCore.pyqtSlot(int)        def on_zeroBox_valueChanged(self, value):            setValue1 = float(value)/1000.0            if self.board == 'ADR lab FPGA 5':                zeroChan = fp.constMem(setValue1, fluxDAC=0)                seq.packet().memory(zeroChan).run_sequence(30).send()            elif self.board == 'Null':                print 'no board selected'            else:                sb.set_fb(self.board, cxn, setValue1*V, 0)        @QtCore.pyqtSlot(int)        def on_oneBox_valueChanged(self, value):            setValue2 = float(value)/1000.0            if self.board == 'ADR lab FPGA 5':                oneChan = fp.constMem(setValue2, fluxDAC=1)                seq.packet().memory(oneChan).run_sequence(30).send()            elif self.board == 'Null':                print 'no board selected'            else:                sb.set_fb(self.board, cxn, setValue2*V, 1)      app = QtGui.QApplication(sys.argv)    window = TestWindow()    sys.exit(app.exec_())